{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<div class="w-full h-screen flex bg">
  <div class="relative basis-[70%] my-5 mr-[36px] ml-[26px]">
    <header class="absolute top-0 left-0 right-0 flex justify-between z-10">
      <a href="">Logo</a>
      <div class="flex gap-10">
        <p>30-Day Risk-Free Trial</p>
        <p>Free Shipping & Returns</p>
      </div>
    </header>
    <div class="gallery h-full py-[10%] px-[8%]">
      {% for image in product.images %}
        {% if image.alt == featured_image.alt %}
          <div
            class="w-full h-full mr-5 bg-cover bg-center bg-no-repeat"
            style="background-image: url('{{ image |  image_url |  prepend: 'https:'  }}');"
          >
            {% comment %} <img src="{{ image |  img_url: "large"  }}" alt=""> {% endcomment %}
          </div>
        {% endif %}
      {% endfor %}
    </div>
    <div class="gallery-nav">
      {% for image in product.images %}
        {% if image.alt == featured_image.alt %}
        <div class="mr-5">
          <img src="{{ image |  image_url: width: "20px" }}" alt="">
        </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
  <aside class="bg-white flex-1">
    <div class="tabs">
      <div class="tabs__nav flex gap-[36px] pt-[36px] mx-[36px] pb-[16px] mb-[36px] border-b border-[#EEECE7]">
        <button type="button" data-tab="1" class="tabs__btn active">1. Sofa</button>
        <button type="button" data-tab="2" class="tabs__btn">2. Add-ons</button>
        <button type="button" data-tab="3" class="tabs__btn">3. Summary</button>
      </div>
      <div class="tabs__content">
        <div data-tab="1" class="tabs__item active">
          <div class="px-[36px] pb-[36px] border-b border-[#EEECE7]">
            {% form 'product', product %}
              <input type="hidden" name="id" id="product-id" value="{{ current_product.id }}">

              {% if product.variants.size > 1 %}
                <div class="product-options" data-url="{{ product.url }}">
                {% assign numOfSeats = nill %}
                  {% for opt in current_variant.options %}
                    {% if opt contains "seats" %}
                      {% assign numOfSeats = opt %}
                    {% endif %}
                  {% endfor %}
                {% for option in product.options_with_values %}
                    <fieldset>
                      <legend>
                      </legend>
                      <div class="values">
                        {% if option.name != "Configuration" %}
                          {% for value in option.values %}
                          {% assign imageUrl = option.name | handleize | append: '-' | append: value | downcase %}

                          <label class="value__wrapper">
                            <img src="../assets/{{ imageUrl }}.svg" alt="">
                            <input
                              {% if option.selected_value == value %}
                                checked
                              {% endif %}
                              type="radio"
                              name="{{ option.name }}"
                              value="{{ value }}"
                            >
                          </label>
                          {% endfor %}
                        {% else %}
                          {% for value in option.values %}
                          {% assign imageUrl = option.name | handleize | append: '-' | append: value |  append: '-' |  append: numOfSeats | downcase %}
                          
                          <label class="value__wrapper">
                            <img src="../assets/{{ imageUrl }}.svg" alt="">
                            <input
                              {% if option.selected_value == value %}
                                checked
                              {% endif %}
                              type="radio"
                              name="{{ option.name }}"
                              value="{{ value }}"
                            >
                          </label>
                          {% endfor %}
                        {% endif %}
                      </div>
                    </fieldset>
                  {% endfor %}
                  <p class="line-item-property__field">
                    <label>Color</label><br>
                    <input required class="required" type="radio" name="properties[Color]" value="red">
                    <span>red</span><br>
                    <input required class="required" type="radio" name="properties[Color]" value="blue">
                    <span>blue</span><br>
                    <input required class="required" type="radio" name="properties[Color]" value="green">
                    <span>green</span><br>
                  </p>
                </div>
              {% endif %}
            {% endform %}
          </div>
          <div class="py-[20px] px-[36px]">
            <p>Total</p>
            <p>{{ product.selected_or_first_available_variant.price | money }}</p>
          </div>
        </div>
        <div data-tab="2" class="tabs__item">2</div>
        <div data-tab="3" class="tabs__item">3</div>
      </div>
    </div>
  </aside>
</div>
<script>
  const product = {{ product | json }};
  
  const variantIdInputRef = document.querySelector("#product-id");
  const productOptionsRef = document.querySelector('.product-options');
  const optionsValuesInputsRefs = productOptionsRef.querySelectorAll('input[type="radio"]');
  
  const getSelectedVariant = () => {
    const selectedOptions = [];
    
    optionsValuesInputsRefs.forEach(input => {
      if(input.checked) {
        selectedOptions.push(input.value)
      }
    })
    
    const matchedVariant = product.variants.find(variant => {
      let pass = true;
      
      variant.options.forEach(option => {
        if(!selectedOptions.includes(option)){
          pass = false;
        }
      })

      return pass;
    })
    
    return matchedVariant;
  }
  
  const updateUrl = (selectedVariant) => {
    const url = `${productOptionsRef.dataset.url}?variant=${selectedVariant.id}` 
    window.history.replaceState({}, "", url)
  }

  const updatePrice = (variant) => {
    //ToDo realization of changing price (by url or moneyFormatter)
  }

  const onVariantChange = e => {
    const selectedVariant = getSelectedVariant();

    if(selectedVariant){
      updateUrl(selectedVariant);
      updatePrice(selectedVariant);
      variantIdInputRef.value = selectedVariant.id;
      console.log(selectedVariant)
    }
  }
  
  productOptionsRef.addEventListener("change", onVariantChange)
  
  </script>

  
